(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["vendor.aurelia-dependency-injection~fbc292be"],{

/***/ "3U8n":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/aurelia-dependency-injection/dist/native-modules/aurelia-dependency-injection.js ***!
  \*******************************************************************************************************/
/*! exports provided: _emptyParameters, InvocationHandler, Container, autoinject, inject, invoker, invokeAsFactory, FactoryInvoker, registration, transient, singleton, TransientRegistration, SingletonRegistration, resolver, StrategyResolver, Lazy, All, Optional, Parent, Factory, NewInstance, getDecoratorDependencies, lazy, all, optional, parent, factory, newInstance */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"_emptyParameters\", function() { return _emptyParameters; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"InvocationHandler\", function() { return InvocationHandler; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Container\", function() { return Container; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"autoinject\", function() { return autoinject; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"inject\", function() { return inject; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"invoker\", function() { return invoker; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"invokeAsFactory\", function() { return invokeAsFactory; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"FactoryInvoker\", function() { return FactoryInvoker; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"registration\", function() { return registration; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"transient\", function() { return transient; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"singleton\", function() { return singleton; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"TransientRegistration\", function() { return TransientRegistration; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SingletonRegistration\", function() { return SingletonRegistration; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"resolver\", function() { return resolver; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"StrategyResolver\", function() { return StrategyResolver; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Lazy\", function() { return Lazy; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"All\", function() { return All; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Optional\", function() { return Optional; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Parent\", function() { return Parent; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Factory\", function() { return Factory; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"NewInstance\", function() { return NewInstance; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getDecoratorDependencies\", function() { return getDecoratorDependencies; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"lazy\", function() { return lazy; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"all\", function() { return all; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"optional\", function() { return optional; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"parent\", function() { return parent; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"factory\", function() { return factory; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"newInstance\", function() { return newInstance; });\n/* harmony import */ var aurelia_metadata__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! aurelia-metadata */ \"qrcG\");\n/* harmony import */ var aurelia_pal__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! aurelia-pal */ \"70NS\");\n\n\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n\r\nfunction __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nfunction __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\n\nfunction isInjectable(potentialTarget) {\r\n    return !!potentialTarget;\r\n}\r\nfunction autoinject(potentialTarget) {\r\n    var deco = function (target) {\r\n        if (!target.hasOwnProperty('inject')) {\r\n            target.inject = (aurelia_metadata__WEBPACK_IMPORTED_MODULE_0__[\"metadata\"].getOwn(aurelia_metadata__WEBPACK_IMPORTED_MODULE_0__[\"metadata\"].paramTypes, target) ||\r\n                _emptyParameters).slice();\r\n            if (target.inject && target.inject.length > 0) {\r\n                if (target.inject[target.inject.length - 1] === Object) {\r\n                    target.inject.splice(-1, 1);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    if (isInjectable(potentialTarget)) {\r\n        return deco(potentialTarget);\r\n    }\r\n    return deco;\r\n}\r\nfunction inject() {\r\n    var rest = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        rest[_i] = arguments[_i];\r\n    }\r\n    return function (target, _key, descriptor) {\r\n        if (typeof descriptor === 'number') {\r\n            autoinject(target);\r\n            if (rest.length === 1) {\r\n                target.inject[descriptor] = rest[0];\r\n            }\r\n            return;\r\n        }\r\n        if (descriptor) {\r\n            var fn = descriptor.value;\r\n            fn.inject = rest;\r\n        }\r\n        else {\r\n            target.inject = rest;\r\n        }\r\n    };\r\n}\n\nvar resolver = aurelia_metadata__WEBPACK_IMPORTED_MODULE_0__[\"protocol\"].create('aurelia:resolver', function (target) {\r\n    if (!(typeof target.get === 'function')) {\r\n        return 'Resolvers must implement: get(container: Container, key: any): any';\r\n    }\r\n    return true;\r\n});\r\nfunction isStrategy(actual, expected, state) {\r\n    return actual === expected;\r\n}\r\nvar StrategyResolver = (function () {\r\n    function StrategyResolver(strategy, state) {\r\n        this.strategy = strategy;\r\n        this.state = state;\r\n    }\r\n    StrategyResolver.prototype.get = function (container, key) {\r\n        if (isStrategy(this.strategy, 0, this.state)) {\r\n            return this.state;\r\n        }\r\n        if (isStrategy(this.strategy, 1, this.state)) {\r\n            var singleton = container.invoke(this.state);\r\n            this.state = singleton;\r\n            this.strategy = 0;\r\n            return singleton;\r\n        }\r\n        if (isStrategy(this.strategy, 2, this.state)) {\r\n            return container.invoke(this.state);\r\n        }\r\n        if (isStrategy(this.strategy, 3, this.state)) {\r\n            return this.state(container, key, this);\r\n        }\r\n        if (isStrategy(this.strategy, 4, this.state)) {\r\n            return this.state[0].get(container, key);\r\n        }\r\n        if (isStrategy(this.strategy, 5, this.state)) {\r\n            return container.get(this.state);\r\n        }\r\n        throw new Error('Invalid strategy: ' + this.strategy);\r\n    };\r\n    StrategyResolver = __decorate([\r\n        resolver(),\r\n        __metadata(\"design:paramtypes\", [Number, Object])\r\n    ], StrategyResolver);\r\n    return StrategyResolver;\r\n}());\r\nvar Lazy = (function () {\r\n    function Lazy(key) {\r\n        this._key = key;\r\n    }\r\n    Lazy_1 = Lazy;\r\n    Lazy.prototype.get = function (container) {\r\n        var _this = this;\r\n        return function () { return container.get(_this._key); };\r\n    };\r\n    Lazy.of = function (key) {\r\n        return new Lazy_1(key);\r\n    };\r\n    var Lazy_1;\r\n    Lazy = Lazy_1 = __decorate([\r\n        resolver(),\r\n        __metadata(\"design:paramtypes\", [Object])\r\n    ], Lazy);\r\n    return Lazy;\r\n}());\r\nvar All = (function () {\r\n    function All(key) {\r\n        this._key = key;\r\n    }\r\n    All_1 = All;\r\n    All.prototype.get = function (container) {\r\n        return container.getAll(this._key);\r\n    };\r\n    All.of = function (key) {\r\n        return new All_1(key);\r\n    };\r\n    var All_1;\r\n    All = All_1 = __decorate([\r\n        resolver(),\r\n        __metadata(\"design:paramtypes\", [Object])\r\n    ], All);\r\n    return All;\r\n}());\r\nvar Optional = (function () {\r\n    function Optional(key, checkParent) {\r\n        if (checkParent === void 0) { checkParent = true; }\r\n        this._key = key;\r\n        this._checkParent = checkParent;\r\n    }\r\n    Optional_1 = Optional;\r\n    Optional.prototype.get = function (container) {\r\n        if (container.hasResolver(this._key, this._checkParent)) {\r\n            return container.get(this._key);\r\n        }\r\n        return null;\r\n    };\r\n    Optional.of = function (key, checkParent) {\r\n        if (checkParent === void 0) { checkParent = true; }\r\n        return new Optional_1(key, checkParent);\r\n    };\r\n    var Optional_1;\r\n    Optional = Optional_1 = __decorate([\r\n        resolver(),\r\n        __metadata(\"design:paramtypes\", [Object, Boolean])\r\n    ], Optional);\r\n    return Optional;\r\n}());\r\nvar Parent = (function () {\r\n    function Parent(key) {\r\n        this._key = key;\r\n    }\r\n    Parent_1 = Parent;\r\n    Parent.prototype.get = function (container) {\r\n        return container.parent ? container.parent.get(this._key) : null;\r\n    };\r\n    Parent.of = function (key) {\r\n        return new Parent_1(key);\r\n    };\r\n    var Parent_1;\r\n    Parent = Parent_1 = __decorate([\r\n        resolver(),\r\n        __metadata(\"design:paramtypes\", [Object])\r\n    ], Parent);\r\n    return Parent;\r\n}());\r\nvar Factory = (function () {\r\n    function Factory(key) {\r\n        this._key = key;\r\n    }\r\n    Factory_1 = Factory;\r\n    Factory.prototype.get = function (container) {\r\n        var fn = this._key;\r\n        var resolver = container.getResolver(fn);\r\n        if (resolver && resolver.strategy === 3) {\r\n            fn = resolver.state;\r\n        }\r\n        return function () {\r\n            var rest = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                rest[_i] = arguments[_i];\r\n            }\r\n            return container.invoke(fn, rest);\r\n        };\r\n    };\r\n    Factory.of = function (key) {\r\n        return new Factory_1(key);\r\n    };\r\n    var Factory_1;\r\n    Factory = Factory_1 = __decorate([\r\n        resolver(),\r\n        __metadata(\"design:paramtypes\", [Object])\r\n    ], Factory);\r\n    return Factory;\r\n}());\r\nvar NewInstance = (function () {\r\n    function NewInstance(key) {\r\n        var dynamicDependencies = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            dynamicDependencies[_i - 1] = arguments[_i];\r\n        }\r\n        this.key = key;\r\n        this.asKey = key;\r\n        this.dynamicDependencies = dynamicDependencies;\r\n    }\r\n    NewInstance_1 = NewInstance;\r\n    NewInstance.prototype.get = function (container) {\r\n        var dynamicDependencies = this.dynamicDependencies.length > 0\r\n            ? this.dynamicDependencies.map(function (dependency) {\r\n                return dependency['protocol:aurelia:resolver']\r\n                    ? dependency.get(container)\r\n                    : container.get(dependency);\r\n            })\r\n            : undefined;\r\n        var fn = this.key;\r\n        var resolver = container.getResolver(fn);\r\n        if (resolver && resolver.strategy === 3) {\r\n            fn = resolver.state;\r\n        }\r\n        var instance = container.invoke(fn, dynamicDependencies);\r\n        container.registerInstance(this.asKey, instance);\r\n        return instance;\r\n    };\r\n    NewInstance.prototype.as = function (key) {\r\n        this.asKey = key;\r\n        return this;\r\n    };\r\n    NewInstance.of = function (key) {\r\n        var dynamicDependencies = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            dynamicDependencies[_i - 1] = arguments[_i];\r\n        }\r\n        return new (NewInstance_1.bind.apply(NewInstance_1, [void 0, key].concat(dynamicDependencies)))();\r\n    };\r\n    var NewInstance_1;\r\n    NewInstance = NewInstance_1 = __decorate([\r\n        resolver(),\r\n        __metadata(\"design:paramtypes\", [Object, Object])\r\n    ], NewInstance);\r\n    return NewInstance;\r\n}());\r\nfunction getDecoratorDependencies(target) {\r\n    autoinject(target);\r\n    return target.inject;\r\n}\r\nfunction lazy(keyValue) {\r\n    return function (target, _key, index) {\r\n        var inject$$1 = getDecoratorDependencies(target);\r\n        inject$$1[index] = Lazy.of(keyValue);\r\n    };\r\n}\r\nfunction all(keyValue) {\r\n    return function (target, _key, index) {\r\n        var inject$$1 = getDecoratorDependencies(target);\r\n        inject$$1[index] = All.of(keyValue);\r\n    };\r\n}\r\nfunction optional(checkParentOrTarget) {\r\n    if (checkParentOrTarget === void 0) { checkParentOrTarget = true; }\r\n    var deco = function (checkParent) {\r\n        return function (target, _key, index) {\r\n            var inject$$1 = getDecoratorDependencies(target);\r\n            inject$$1[index] = Optional.of(inject$$1[index], checkParent);\r\n        };\r\n    };\r\n    if (typeof checkParentOrTarget === 'boolean') {\r\n        return deco(checkParentOrTarget);\r\n    }\r\n    return deco(true);\r\n}\r\nfunction parent(target, _key, index) {\r\n    var inject$$1 = getDecoratorDependencies(target);\r\n    inject$$1[index] = Parent.of(inject$$1[index]);\r\n}\r\nfunction factory(keyValue) {\r\n    return function (target, _key, index) {\r\n        var inject$$1 = getDecoratorDependencies(target);\r\n        inject$$1[index] = Factory.of(keyValue);\r\n    };\r\n}\r\nfunction newInstance(asKeyOrTarget) {\r\n    var dynamicDependencies = [];\r\n    for (var _i = 1; _i < arguments.length; _i++) {\r\n        dynamicDependencies[_i - 1] = arguments[_i];\r\n    }\r\n    var deco = function (asKey) {\r\n        return function (target, _key, index) {\r\n            var inject$$1 = getDecoratorDependencies(target);\r\n            inject$$1[index] = NewInstance.of.apply(NewInstance, [inject$$1[index]].concat(dynamicDependencies));\r\n            if (!!asKey) {\r\n                inject$$1[index].as(asKey);\r\n            }\r\n        };\r\n    };\r\n    if (arguments.length >= 1) {\r\n        return deco(asKeyOrTarget);\r\n    }\r\n    return deco();\r\n}\n\nfunction validateKey(key) {\r\n    if (key === null || key === undefined) {\r\n        throw new Error('key/value cannot be null or undefined. Are you trying to inject/register something that doesn\\'t exist with DI?');\r\n    }\r\n}\r\nvar _emptyParameters = Object.freeze([]);\r\naurelia_metadata__WEBPACK_IMPORTED_MODULE_0__[\"metadata\"].registration = 'aurelia:registration';\r\naurelia_metadata__WEBPACK_IMPORTED_MODULE_0__[\"metadata\"].invoker = 'aurelia:invoker';\r\nvar resolverDecorates = resolver.decorates;\r\nvar InvocationHandler = (function () {\r\n    function InvocationHandler(fn, invoker, dependencies) {\r\n        this.fn = fn;\r\n        this.invoker = invoker;\r\n        this.dependencies = dependencies;\r\n    }\r\n    InvocationHandler.prototype.invoke = function (container, dynamicDependencies) {\r\n        return dynamicDependencies !== undefined\r\n            ? this.invoker.invokeWithDynamicDependencies(container, this.fn, this.dependencies, dynamicDependencies)\r\n            : this.invoker.invoke(container, this.fn, this.dependencies);\r\n    };\r\n    return InvocationHandler;\r\n}());\r\nfunction invokeWithDynamicDependencies(container, fn, staticDependencies, dynamicDependencies) {\r\n    var i = staticDependencies.length;\r\n    var args = new Array(i);\r\n    var lookup;\r\n    while (i--) {\r\n        lookup = staticDependencies[i];\r\n        if (lookup === null || lookup === undefined) {\r\n            throw new Error('Constructor Parameter with index ' +\r\n                i +\r\n                ' cannot be null or undefined. Are you trying to inject/register something that doesn\\'t exist with DI?');\r\n        }\r\n        else {\r\n            args[i] = container.get(lookup);\r\n        }\r\n    }\r\n    if (dynamicDependencies !== undefined) {\r\n        args = args.concat(dynamicDependencies);\r\n    }\r\n    return Reflect.construct(fn, args);\r\n}\r\nvar classInvoker = {\r\n    invoke: function (container, Type, deps) {\r\n        var instances = deps.map(function (dep) { return container.get(dep); });\r\n        return Reflect.construct(Type, instances);\r\n    },\r\n    invokeWithDynamicDependencies: invokeWithDynamicDependencies\r\n};\r\nfunction getDependencies(f) {\r\n    if (!f.hasOwnProperty('inject')) {\r\n        return [];\r\n    }\r\n    if (typeof f.inject === 'function') {\r\n        return f.inject();\r\n    }\r\n    return f.inject;\r\n}\r\nvar Container = (function () {\r\n    function Container(configuration) {\r\n        if (configuration === undefined) {\r\n            configuration = {};\r\n        }\r\n        this._configuration = configuration;\r\n        this._onHandlerCreated = configuration.onHandlerCreated;\r\n        this._handlers =\r\n            configuration.handlers || (configuration.handlers = new Map());\r\n        this._resolvers = new Map();\r\n        this.root = this;\r\n        this.parent = null;\r\n    }\r\n    Container.prototype.makeGlobal = function () {\r\n        Container.instance = this;\r\n        return this;\r\n    };\r\n    Container.prototype.setHandlerCreatedCallback = function (onHandlerCreated) {\r\n        this._onHandlerCreated = onHandlerCreated;\r\n        this._configuration.onHandlerCreated = onHandlerCreated;\r\n    };\r\n    Container.prototype.registerInstance = function (key, instance) {\r\n        return this.registerResolver(key, new StrategyResolver(0, instance === undefined ? key : instance));\r\n    };\r\n    Container.prototype.registerSingleton = function (key, fn) {\r\n        return this.registerResolver(key, new StrategyResolver(1, fn === undefined ? key : fn));\r\n    };\r\n    Container.prototype.registerTransient = function (key, fn) {\r\n        return this.registerResolver(key, new StrategyResolver(2, fn === undefined ? key : fn));\r\n    };\r\n    Container.prototype.registerHandler = function (key, handler) {\r\n        return this.registerResolver(key, new StrategyResolver(3, handler));\r\n    };\r\n    Container.prototype.registerAlias = function (originalKey, aliasKey) {\r\n        return this.registerResolver(aliasKey, new StrategyResolver(5, originalKey));\r\n    };\r\n    Container.prototype.registerResolver = function (key, resolver$$1) {\r\n        validateKey(key);\r\n        var allResolvers = this._resolvers;\r\n        var result = allResolvers.get(key);\r\n        if (result === undefined) {\r\n            allResolvers.set(key, resolver$$1);\r\n        }\r\n        else if (result.strategy === 4) {\r\n            result.state.push(resolver$$1);\r\n        }\r\n        else {\r\n            allResolvers.set(key, new StrategyResolver(4, [result, resolver$$1]));\r\n        }\r\n        return resolver$$1;\r\n    };\r\n    Container.prototype.autoRegister = function (key, fn) {\r\n        fn = fn === undefined ? key : fn;\r\n        if (typeof fn === 'function') {\r\n            var registration = aurelia_metadata__WEBPACK_IMPORTED_MODULE_0__[\"metadata\"].get(aurelia_metadata__WEBPACK_IMPORTED_MODULE_0__[\"metadata\"].registration, fn);\r\n            if (registration === undefined) {\r\n                return this.registerResolver(key, new StrategyResolver(1, fn));\r\n            }\r\n            return registration.registerResolver(this, key, fn);\r\n        }\r\n        return this.registerResolver(key, new StrategyResolver(0, fn));\r\n    };\r\n    Container.prototype.autoRegisterAll = function (fns) {\r\n        var i = fns.length;\r\n        while (i--) {\r\n            this.autoRegister(fns[i]);\r\n        }\r\n    };\r\n    Container.prototype.unregister = function (key) {\r\n        this._resolvers.delete(key);\r\n    };\r\n    Container.prototype.hasResolver = function (key, checkParent) {\r\n        if (checkParent === void 0) { checkParent = false; }\r\n        validateKey(key);\r\n        return (this._resolvers.has(key) ||\r\n            (checkParent &&\r\n                this.parent !== null &&\r\n                this.parent.hasResolver(key, checkParent)));\r\n    };\r\n    Container.prototype.getResolver = function (key) {\r\n        return this._resolvers.get(key);\r\n    };\r\n    Container.prototype.get = function (key) {\r\n        validateKey(key);\r\n        if (key === Container) {\r\n            return this;\r\n        }\r\n        if (resolverDecorates(key)) {\r\n            return key.get(this, key);\r\n        }\r\n        var resolver$$1 = this._resolvers.get(key);\r\n        if (resolver$$1 === undefined) {\r\n            if (this.parent === null) {\r\n                return this.autoRegister(key).get(this, key);\r\n            }\r\n            var registration = aurelia_metadata__WEBPACK_IMPORTED_MODULE_0__[\"metadata\"].get(aurelia_metadata__WEBPACK_IMPORTED_MODULE_0__[\"metadata\"].registration, key);\r\n            if (registration === undefined) {\r\n                return this.parent._get(key);\r\n            }\r\n            return registration.registerResolver(this, key, key).get(this, key);\r\n        }\r\n        return resolver$$1.get(this, key);\r\n    };\r\n    Container.prototype._get = function (key) {\r\n        var resolver$$1 = this._resolvers.get(key);\r\n        if (resolver$$1 === undefined) {\r\n            if (this.parent === null) {\r\n                return this.autoRegister(key).get(this, key);\r\n            }\r\n            return this.parent._get(key);\r\n        }\r\n        return resolver$$1.get(this, key);\r\n    };\r\n    Container.prototype.getAll = function (key) {\r\n        validateKey(key);\r\n        var resolver$$1 = this._resolvers.get(key);\r\n        if (resolver$$1 === undefined) {\r\n            if (this.parent === null) {\r\n                return _emptyParameters;\r\n            }\r\n            return this.parent.getAll(key);\r\n        }\r\n        if (resolver$$1.strategy === 4) {\r\n            var state = resolver$$1.state;\r\n            var i = state.length;\r\n            var results = new Array(i);\r\n            while (i--) {\r\n                results[i] = state[i].get(this, key);\r\n            }\r\n            return results;\r\n        }\r\n        return [resolver$$1.get(this, key)];\r\n    };\r\n    Container.prototype.createChild = function () {\r\n        var child = new Container(this._configuration);\r\n        child.root = this.root;\r\n        child.parent = this;\r\n        return child;\r\n    };\r\n    Container.prototype.invoke = function (fn, dynamicDependencies) {\r\n        try {\r\n            var handler = this._handlers.get(fn);\r\n            if (handler === undefined) {\r\n                handler = this._createInvocationHandler(fn);\r\n                this._handlers.set(fn, handler);\r\n            }\r\n            return handler.invoke(this, dynamicDependencies);\r\n        }\r\n        catch (e) {\r\n            throw new aurelia_pal__WEBPACK_IMPORTED_MODULE_1__[\"AggregateError\"](\"Error invoking \" + fn.name + \". Check the inner error for details.\", e, true);\r\n        }\r\n    };\r\n    Container.prototype._createInvocationHandler = function (fn) {\r\n        var dependencies;\r\n        if (fn.inject === undefined) {\r\n            dependencies =\r\n                aurelia_metadata__WEBPACK_IMPORTED_MODULE_0__[\"metadata\"].getOwn(aurelia_metadata__WEBPACK_IMPORTED_MODULE_0__[\"metadata\"].paramTypes, fn) || _emptyParameters;\r\n        }\r\n        else {\r\n            dependencies = [];\r\n            var ctor = fn;\r\n            while (typeof ctor === 'function') {\r\n                dependencies.push.apply(dependencies, getDependencies(ctor));\r\n                ctor = Object.getPrototypeOf(ctor);\r\n            }\r\n        }\r\n        var invoker = aurelia_metadata__WEBPACK_IMPORTED_MODULE_0__[\"metadata\"].getOwn(aurelia_metadata__WEBPACK_IMPORTED_MODULE_0__[\"metadata\"].invoker, fn) || classInvoker;\r\n        var handler = new InvocationHandler(fn, invoker, dependencies);\r\n        return this._onHandlerCreated !== undefined\r\n            ? this._onHandlerCreated(handler)\r\n            : handler;\r\n    };\r\n    return Container;\r\n}());\n\nfunction invoker(value) {\r\n    return function (target) {\r\n        aurelia_metadata__WEBPACK_IMPORTED_MODULE_0__[\"metadata\"].define(aurelia_metadata__WEBPACK_IMPORTED_MODULE_0__[\"metadata\"].invoker, value, target);\r\n    };\r\n}\r\nfunction invokeAsFactory(potentialTarget) {\r\n    var deco = function (target) {\r\n        aurelia_metadata__WEBPACK_IMPORTED_MODULE_0__[\"metadata\"].define(aurelia_metadata__WEBPACK_IMPORTED_MODULE_0__[\"metadata\"].invoker, FactoryInvoker.instance, target);\r\n    };\r\n    return potentialTarget ? deco(potentialTarget) : deco;\r\n}\r\nvar FactoryInvoker = (function () {\r\n    function FactoryInvoker() {\r\n    }\r\n    FactoryInvoker.prototype.invoke = function (container, fn, dependencies) {\r\n        var i = dependencies.length;\r\n        var args = new Array(i);\r\n        while (i--) {\r\n            args[i] = container.get(dependencies[i]);\r\n        }\r\n        return fn.apply(undefined, args);\r\n    };\r\n    FactoryInvoker.prototype.invokeWithDynamicDependencies = function (container, fn, staticDependencies, dynamicDependencies) {\r\n        var i = staticDependencies.length;\r\n        var args = new Array(i);\r\n        while (i--) {\r\n            args[i] = container.get(staticDependencies[i]);\r\n        }\r\n        if (dynamicDependencies !== undefined) {\r\n            args = args.concat(dynamicDependencies);\r\n        }\r\n        return fn.apply(undefined, args);\r\n    };\r\n    return FactoryInvoker;\r\n}());\r\nFactoryInvoker.instance = new FactoryInvoker();\n\nfunction registration(value) {\r\n    return function (target) {\r\n        aurelia_metadata__WEBPACK_IMPORTED_MODULE_0__[\"metadata\"].define(aurelia_metadata__WEBPACK_IMPORTED_MODULE_0__[\"metadata\"].registration, value, target);\r\n    };\r\n}\r\nfunction transient(key) {\r\n    return registration(new TransientRegistration(key));\r\n}\r\nfunction singleton(keyOrRegisterInChild, registerInChild) {\r\n    if (registerInChild === void 0) { registerInChild = false; }\r\n    return registration(new SingletonRegistration(keyOrRegisterInChild, registerInChild));\r\n}\r\nvar TransientRegistration = (function () {\r\n    function TransientRegistration(key) {\r\n        this._key = key;\r\n    }\r\n    TransientRegistration.prototype.registerResolver = function (container, key, fn) {\r\n        var existingResolver = container.getResolver(this._key || key);\r\n        return existingResolver === undefined\r\n            ? container.registerTransient((this._key || key), fn)\r\n            : existingResolver;\r\n    };\r\n    return TransientRegistration;\r\n}());\r\nvar SingletonRegistration = (function () {\r\n    function SingletonRegistration(keyOrRegisterInChild, registerInChild) {\r\n        if (registerInChild === void 0) { registerInChild = false; }\r\n        if (typeof keyOrRegisterInChild === 'boolean') {\r\n            this._registerInChild = keyOrRegisterInChild;\r\n        }\r\n        else {\r\n            this._key = keyOrRegisterInChild;\r\n            this._registerInChild = registerInChild;\r\n        }\r\n    }\r\n    SingletonRegistration.prototype.registerResolver = function (container, key, fn) {\r\n        var targetContainer = this._registerInChild ? container : container.root;\r\n        var existingResolver = targetContainer.getResolver(this._key || key);\r\n        return existingResolver === undefined\r\n            ? targetContainer.registerSingleton(this._key || key, fn)\r\n            : existingResolver;\r\n    };\r\n    return SingletonRegistration;\r\n}());\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiM1U4bi5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9hdXJlbGlhLWRlcGVuZGVuY3ktaW5qZWN0aW9uL2Rpc3QvbmF0aXZlLW1vZHVsZXMvYXVyZWxpYS1kZXBlbmRlbmN5LWluamVjdGlvbi5qcz9kZDRmIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IG1ldGFkYXRhLCBwcm90b2NvbCB9IGZyb20gJ2F1cmVsaWEtbWV0YWRhdGEnO1xuaW1wb3J0IHsgQWdncmVnYXRlRXJyb3IgfSBmcm9tICdhdXJlbGlhLXBhbCc7XG5cbi8qISAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxyXG5Db3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cclxuTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTsgeW91IG1heSBub3QgdXNlXHJcbnRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlXHJcbkxpY2Vuc2UgYXQgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXHJcblxyXG5USElTIENPREUgSVMgUFJPVklERUQgT04gQU4gKkFTIElTKiBCQVNJUywgV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZXHJcbktJTkQsIEVJVEhFUiBFWFBSRVNTIE9SIElNUExJRUQsIElOQ0xVRElORyBXSVRIT1VUIExJTUlUQVRJT04gQU5ZIElNUExJRURcclxuV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIFRJVExFLCBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRSxcclxuTUVSQ0hBTlRBQkxJVFkgT1IgTk9OLUlORlJJTkdFTUVOVC5cclxuXHJcblNlZSB0aGUgQXBhY2hlIFZlcnNpb24gMi4wIExpY2Vuc2UgZm9yIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9uc1xyXG5hbmQgbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXHJcbioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqICovXHJcblxyXG5mdW5jdGlvbiBfX2RlY29yYXRlKGRlY29yYXRvcnMsIHRhcmdldCwga2V5LCBkZXNjKSB7XHJcbiAgICB2YXIgYyA9IGFyZ3VtZW50cy5sZW5ndGgsIHIgPSBjIDwgMyA/IHRhcmdldCA6IGRlc2MgPT09IG51bGwgPyBkZXNjID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcih0YXJnZXQsIGtleSkgOiBkZXNjLCBkO1xyXG4gICAgaWYgKHR5cGVvZiBSZWZsZWN0ID09PSBcIm9iamVjdFwiICYmIHR5cGVvZiBSZWZsZWN0LmRlY29yYXRlID09PSBcImZ1bmN0aW9uXCIpIHIgPSBSZWZsZWN0LmRlY29yYXRlKGRlY29yYXRvcnMsIHRhcmdldCwga2V5LCBkZXNjKTtcclxuICAgIGVsc2UgZm9yICh2YXIgaSA9IGRlY29yYXRvcnMubGVuZ3RoIC0gMTsgaSA+PSAwOyBpLS0pIGlmIChkID0gZGVjb3JhdG9yc1tpXSkgciA9IChjIDwgMyA/IGQocikgOiBjID4gMyA/IGQodGFyZ2V0LCBrZXksIHIpIDogZCh0YXJnZXQsIGtleSkpIHx8IHI7XHJcbiAgICByZXR1cm4gYyA+IDMgJiYgciAmJiBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBrZXksIHIpLCByO1xyXG59XHJcblxyXG5mdW5jdGlvbiBfX21ldGFkYXRhKG1ldGFkYXRhS2V5LCBtZXRhZGF0YVZhbHVlKSB7XHJcbiAgICBpZiAodHlwZW9mIFJlZmxlY3QgPT09IFwib2JqZWN0XCIgJiYgdHlwZW9mIFJlZmxlY3QubWV0YWRhdGEgPT09IFwiZnVuY3Rpb25cIikgcmV0dXJuIFJlZmxlY3QubWV0YWRhdGEobWV0YWRhdGFLZXksIG1ldGFkYXRhVmFsdWUpO1xyXG59XG5cbmZ1bmN0aW9uIGlzSW5qZWN0YWJsZShwb3RlbnRpYWxUYXJnZXQpIHtcclxuICAgIHJldHVybiAhIXBvdGVudGlhbFRhcmdldDtcclxufVxyXG5mdW5jdGlvbiBhdXRvaW5qZWN0KHBvdGVudGlhbFRhcmdldCkge1xyXG4gICAgdmFyIGRlY28gPSBmdW5jdGlvbiAodGFyZ2V0KSB7XHJcbiAgICAgICAgaWYgKCF0YXJnZXQuaGFzT3duUHJvcGVydHkoJ2luamVjdCcpKSB7XHJcbiAgICAgICAgICAgIHRhcmdldC5pbmplY3QgPSAobWV0YWRhdGEuZ2V0T3duKG1ldGFkYXRhLnBhcmFtVHlwZXMsIHRhcmdldCkgfHxcclxuICAgICAgICAgICAgICAgIF9lbXB0eVBhcmFtZXRlcnMpLnNsaWNlKCk7XHJcbiAgICAgICAgICAgIGlmICh0YXJnZXQuaW5qZWN0ICYmIHRhcmdldC5pbmplY3QubGVuZ3RoID4gMCkge1xyXG4gICAgICAgICAgICAgICAgaWYgKHRhcmdldC5pbmplY3RbdGFyZ2V0LmluamVjdC5sZW5ndGggLSAxXSA9PT0gT2JqZWN0KSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdGFyZ2V0LmluamVjdC5zcGxpY2UoLTEsIDEpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfTtcclxuICAgIGlmIChpc0luamVjdGFibGUocG90ZW50aWFsVGFyZ2V0KSkge1xyXG4gICAgICAgIHJldHVybiBkZWNvKHBvdGVudGlhbFRhcmdldCk7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gZGVjbztcclxufVxyXG5mdW5jdGlvbiBpbmplY3QoKSB7XHJcbiAgICB2YXIgcmVzdCA9IFtdO1xyXG4gICAgZm9yICh2YXIgX2kgPSAwOyBfaSA8IGFyZ3VtZW50cy5sZW5ndGg7IF9pKyspIHtcclxuICAgICAgICByZXN0W19pXSA9IGFyZ3VtZW50c1tfaV07XHJcbiAgICB9XHJcbiAgICByZXR1cm4gZnVuY3Rpb24gKHRhcmdldCwgX2tleSwgZGVzY3JpcHRvcikge1xyXG4gICAgICAgIGlmICh0eXBlb2YgZGVzY3JpcHRvciA9PT0gJ251bWJlcicpIHtcclxuICAgICAgICAgICAgYXV0b2luamVjdCh0YXJnZXQpO1xyXG4gICAgICAgICAgICBpZiAocmVzdC5sZW5ndGggPT09IDEpIHtcclxuICAgICAgICAgICAgICAgIHRhcmdldC5pbmplY3RbZGVzY3JpcHRvcl0gPSByZXN0WzBdO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKGRlc2NyaXB0b3IpIHtcclxuICAgICAgICAgICAgdmFyIGZuID0gZGVzY3JpcHRvci52YWx1ZTtcclxuICAgICAgICAgICAgZm4uaW5qZWN0ID0gcmVzdDtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgIHRhcmdldC5pbmplY3QgPSByZXN0O1xyXG4gICAgICAgIH1cclxuICAgIH07XHJcbn1cblxudmFyIHJlc29sdmVyID0gcHJvdG9jb2wuY3JlYXRlKCdhdXJlbGlhOnJlc29sdmVyJywgZnVuY3Rpb24gKHRhcmdldCkge1xyXG4gICAgaWYgKCEodHlwZW9mIHRhcmdldC5nZXQgPT09ICdmdW5jdGlvbicpKSB7XHJcbiAgICAgICAgcmV0dXJuICdSZXNvbHZlcnMgbXVzdCBpbXBsZW1lbnQ6IGdldChjb250YWluZXI6IENvbnRhaW5lciwga2V5OiBhbnkpOiBhbnknO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIHRydWU7XHJcbn0pO1xyXG5mdW5jdGlvbiBpc1N0cmF0ZWd5KGFjdHVhbCwgZXhwZWN0ZWQsIHN0YXRlKSB7XHJcbiAgICByZXR1cm4gYWN0dWFsID09PSBleHBlY3RlZDtcclxufVxyXG52YXIgU3RyYXRlZ3lSZXNvbHZlciA9IChmdW5jdGlvbiAoKSB7XHJcbiAgICBmdW5jdGlvbiBTdHJhdGVneVJlc29sdmVyKHN0cmF0ZWd5LCBzdGF0ZSkge1xyXG4gICAgICAgIHRoaXMuc3RyYXRlZ3kgPSBzdHJhdGVneTtcclxuICAgICAgICB0aGlzLnN0YXRlID0gc3RhdGU7XHJcbiAgICB9XHJcbiAgICBTdHJhdGVneVJlc29sdmVyLnByb3RvdHlwZS5nZXQgPSBmdW5jdGlvbiAoY29udGFpbmVyLCBrZXkpIHtcclxuICAgICAgICBpZiAoaXNTdHJhdGVneSh0aGlzLnN0cmF0ZWd5LCAwLCB0aGlzLnN0YXRlKSkge1xyXG4gICAgICAgICAgICByZXR1cm4gdGhpcy5zdGF0ZTtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKGlzU3RyYXRlZ3kodGhpcy5zdHJhdGVneSwgMSwgdGhpcy5zdGF0ZSkpIHtcclxuICAgICAgICAgICAgdmFyIHNpbmdsZXRvbiA9IGNvbnRhaW5lci5pbnZva2UodGhpcy5zdGF0ZSk7XHJcbiAgICAgICAgICAgIHRoaXMuc3RhdGUgPSBzaW5nbGV0b247XHJcbiAgICAgICAgICAgIHRoaXMuc3RyYXRlZ3kgPSAwO1xyXG4gICAgICAgICAgICByZXR1cm4gc2luZ2xldG9uO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAoaXNTdHJhdGVneSh0aGlzLnN0cmF0ZWd5LCAyLCB0aGlzLnN0YXRlKSkge1xyXG4gICAgICAgICAgICByZXR1cm4gY29udGFpbmVyLmludm9rZSh0aGlzLnN0YXRlKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKGlzU3RyYXRlZ3kodGhpcy5zdHJhdGVneSwgMywgdGhpcy5zdGF0ZSkpIHtcclxuICAgICAgICAgICAgcmV0dXJuIHRoaXMuc3RhdGUoY29udGFpbmVyLCBrZXksIHRoaXMpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAoaXNTdHJhdGVneSh0aGlzLnN0cmF0ZWd5LCA0LCB0aGlzLnN0YXRlKSkge1xyXG4gICAgICAgICAgICByZXR1cm4gdGhpcy5zdGF0ZVswXS5nZXQoY29udGFpbmVyLCBrZXkpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAoaXNTdHJhdGVneSh0aGlzLnN0cmF0ZWd5LCA1LCB0aGlzLnN0YXRlKSkge1xyXG4gICAgICAgICAgICByZXR1cm4gY29udGFpbmVyLmdldCh0aGlzLnN0YXRlKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdJbnZhbGlkIHN0cmF0ZWd5OiAnICsgdGhpcy5zdHJhdGVneSk7XHJcbiAgICB9O1xyXG4gICAgU3RyYXRlZ3lSZXNvbHZlciA9IF9fZGVjb3JhdGUoW1xyXG4gICAgICAgIHJlc29sdmVyKCksXHJcbiAgICAgICAgX19tZXRhZGF0YShcImRlc2lnbjpwYXJhbXR5cGVzXCIsIFtOdW1iZXIsIE9iamVjdF0pXHJcbiAgICBdLCBTdHJhdGVneVJlc29sdmVyKTtcclxuICAgIHJldHVybiBTdHJhdGVneVJlc29sdmVyO1xyXG59KCkpO1xyXG52YXIgTGF6eSA9IChmdW5jdGlvbiAoKSB7XHJcbiAgICBmdW5jdGlvbiBMYXp5KGtleSkge1xyXG4gICAgICAgIHRoaXMuX2tleSA9IGtleTtcclxuICAgIH1cclxuICAgIExhenlfMSA9IExhenk7XHJcbiAgICBMYXp5LnByb3RvdHlwZS5nZXQgPSBmdW5jdGlvbiAoY29udGFpbmVyKSB7XHJcbiAgICAgICAgdmFyIF90aGlzID0gdGhpcztcclxuICAgICAgICByZXR1cm4gZnVuY3Rpb24gKCkgeyByZXR1cm4gY29udGFpbmVyLmdldChfdGhpcy5fa2V5KTsgfTtcclxuICAgIH07XHJcbiAgICBMYXp5Lm9mID0gZnVuY3Rpb24gKGtleSkge1xyXG4gICAgICAgIHJldHVybiBuZXcgTGF6eV8xKGtleSk7XHJcbiAgICB9O1xyXG4gICAgdmFyIExhenlfMTtcclxuICAgIExhenkgPSBMYXp5XzEgPSBfX2RlY29yYXRlKFtcclxuICAgICAgICByZXNvbHZlcigpLFxyXG4gICAgICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246cGFyYW10eXBlc1wiLCBbT2JqZWN0XSlcclxuICAgIF0sIExhenkpO1xyXG4gICAgcmV0dXJuIExhenk7XHJcbn0oKSk7XHJcbnZhciBBbGwgPSAoZnVuY3Rpb24gKCkge1xyXG4gICAgZnVuY3Rpb24gQWxsKGtleSkge1xyXG4gICAgICAgIHRoaXMuX2tleSA9IGtleTtcclxuICAgIH1cclxuICAgIEFsbF8xID0gQWxsO1xyXG4gICAgQWxsLnByb3RvdHlwZS5nZXQgPSBmdW5jdGlvbiAoY29udGFpbmVyKSB7XHJcbiAgICAgICAgcmV0dXJuIGNvbnRhaW5lci5nZXRBbGwodGhpcy5fa2V5KTtcclxuICAgIH07XHJcbiAgICBBbGwub2YgPSBmdW5jdGlvbiAoa2V5KSB7XHJcbiAgICAgICAgcmV0dXJuIG5ldyBBbGxfMShrZXkpO1xyXG4gICAgfTtcclxuICAgIHZhciBBbGxfMTtcclxuICAgIEFsbCA9IEFsbF8xID0gX19kZWNvcmF0ZShbXHJcbiAgICAgICAgcmVzb2x2ZXIoKSxcclxuICAgICAgICBfX21ldGFkYXRhKFwiZGVzaWduOnBhcmFtdHlwZXNcIiwgW09iamVjdF0pXHJcbiAgICBdLCBBbGwpO1xyXG4gICAgcmV0dXJuIEFsbDtcclxufSgpKTtcclxudmFyIE9wdGlvbmFsID0gKGZ1bmN0aW9uICgpIHtcclxuICAgIGZ1bmN0aW9uIE9wdGlvbmFsKGtleSwgY2hlY2tQYXJlbnQpIHtcclxuICAgICAgICBpZiAoY2hlY2tQYXJlbnQgPT09IHZvaWQgMCkgeyBjaGVja1BhcmVudCA9IHRydWU7IH1cclxuICAgICAgICB0aGlzLl9rZXkgPSBrZXk7XHJcbiAgICAgICAgdGhpcy5fY2hlY2tQYXJlbnQgPSBjaGVja1BhcmVudDtcclxuICAgIH1cclxuICAgIE9wdGlvbmFsXzEgPSBPcHRpb25hbDtcclxuICAgIE9wdGlvbmFsLnByb3RvdHlwZS5nZXQgPSBmdW5jdGlvbiAoY29udGFpbmVyKSB7XHJcbiAgICAgICAgaWYgKGNvbnRhaW5lci5oYXNSZXNvbHZlcih0aGlzLl9rZXksIHRoaXMuX2NoZWNrUGFyZW50KSkge1xyXG4gICAgICAgICAgICByZXR1cm4gY29udGFpbmVyLmdldCh0aGlzLl9rZXkpO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gbnVsbDtcclxuICAgIH07XHJcbiAgICBPcHRpb25hbC5vZiA9IGZ1bmN0aW9uIChrZXksIGNoZWNrUGFyZW50KSB7XHJcbiAgICAgICAgaWYgKGNoZWNrUGFyZW50ID09PSB2b2lkIDApIHsgY2hlY2tQYXJlbnQgPSB0cnVlOyB9XHJcbiAgICAgICAgcmV0dXJuIG5ldyBPcHRpb25hbF8xKGtleSwgY2hlY2tQYXJlbnQpO1xyXG4gICAgfTtcclxuICAgIHZhciBPcHRpb25hbF8xO1xyXG4gICAgT3B0aW9uYWwgPSBPcHRpb25hbF8xID0gX19kZWNvcmF0ZShbXHJcbiAgICAgICAgcmVzb2x2ZXIoKSxcclxuICAgICAgICBfX21ldGFkYXRhKFwiZGVzaWduOnBhcmFtdHlwZXNcIiwgW09iamVjdCwgQm9vbGVhbl0pXHJcbiAgICBdLCBPcHRpb25hbCk7XHJcbiAgICByZXR1cm4gT3B0aW9uYWw7XHJcbn0oKSk7XHJcbnZhciBQYXJlbnQgPSAoZnVuY3Rpb24gKCkge1xyXG4gICAgZnVuY3Rpb24gUGFyZW50KGtleSkge1xyXG4gICAgICAgIHRoaXMuX2tleSA9IGtleTtcclxuICAgIH1cclxuICAgIFBhcmVudF8xID0gUGFyZW50O1xyXG4gICAgUGFyZW50LnByb3RvdHlwZS5nZXQgPSBmdW5jdGlvbiAoY29udGFpbmVyKSB7XHJcbiAgICAgICAgcmV0dXJuIGNvbnRhaW5lci5wYXJlbnQgPyBjb250YWluZXIucGFyZW50LmdldCh0aGlzLl9rZXkpIDogbnVsbDtcclxuICAgIH07XHJcbiAgICBQYXJlbnQub2YgPSBmdW5jdGlvbiAoa2V5KSB7XHJcbiAgICAgICAgcmV0dXJuIG5ldyBQYXJlbnRfMShrZXkpO1xyXG4gICAgfTtcclxuICAgIHZhciBQYXJlbnRfMTtcclxuICAgIFBhcmVudCA9IFBhcmVudF8xID0gX19kZWNvcmF0ZShbXHJcbiAgICAgICAgcmVzb2x2ZXIoKSxcclxuICAgICAgICBfX21ldGFkYXRhKFwiZGVzaWduOnBhcmFtdHlwZXNcIiwgW09iamVjdF0pXHJcbiAgICBdLCBQYXJlbnQpO1xyXG4gICAgcmV0dXJuIFBhcmVudDtcclxufSgpKTtcclxudmFyIEZhY3RvcnkgPSAoZnVuY3Rpb24gKCkge1xyXG4gICAgZnVuY3Rpb24gRmFjdG9yeShrZXkpIHtcclxuICAgICAgICB0aGlzLl9rZXkgPSBrZXk7XHJcbiAgICB9XHJcbiAgICBGYWN0b3J5XzEgPSBGYWN0b3J5O1xyXG4gICAgRmFjdG9yeS5wcm90b3R5cGUuZ2V0ID0gZnVuY3Rpb24gKGNvbnRhaW5lcikge1xyXG4gICAgICAgIHZhciBmbiA9IHRoaXMuX2tleTtcclxuICAgICAgICB2YXIgcmVzb2x2ZXIgPSBjb250YWluZXIuZ2V0UmVzb2x2ZXIoZm4pO1xyXG4gICAgICAgIGlmIChyZXNvbHZlciAmJiByZXNvbHZlci5zdHJhdGVneSA9PT0gMykge1xyXG4gICAgICAgICAgICBmbiA9IHJlc29sdmVyLnN0YXRlO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICB2YXIgcmVzdCA9IFtdO1xyXG4gICAgICAgICAgICBmb3IgKHZhciBfaSA9IDA7IF9pIDwgYXJndW1lbnRzLmxlbmd0aDsgX2krKykge1xyXG4gICAgICAgICAgICAgICAgcmVzdFtfaV0gPSBhcmd1bWVudHNbX2ldO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHJldHVybiBjb250YWluZXIuaW52b2tlKGZuLCByZXN0KTtcclxuICAgICAgICB9O1xyXG4gICAgfTtcclxuICAgIEZhY3Rvcnkub2YgPSBmdW5jdGlvbiAoa2V5KSB7XHJcbiAgICAgICAgcmV0dXJuIG5ldyBGYWN0b3J5XzEoa2V5KTtcclxuICAgIH07XHJcbiAgICB2YXIgRmFjdG9yeV8xO1xyXG4gICAgRmFjdG9yeSA9IEZhY3RvcnlfMSA9IF9fZGVjb3JhdGUoW1xyXG4gICAgICAgIHJlc29sdmVyKCksXHJcbiAgICAgICAgX19tZXRhZGF0YShcImRlc2lnbjpwYXJhbXR5cGVzXCIsIFtPYmplY3RdKVxyXG4gICAgXSwgRmFjdG9yeSk7XHJcbiAgICByZXR1cm4gRmFjdG9yeTtcclxufSgpKTtcclxudmFyIE5ld0luc3RhbmNlID0gKGZ1bmN0aW9uICgpIHtcclxuICAgIGZ1bmN0aW9uIE5ld0luc3RhbmNlKGtleSkge1xyXG4gICAgICAgIHZhciBkeW5hbWljRGVwZW5kZW5jaWVzID0gW107XHJcbiAgICAgICAgZm9yICh2YXIgX2kgPSAxOyBfaSA8IGFyZ3VtZW50cy5sZW5ndGg7IF9pKyspIHtcclxuICAgICAgICAgICAgZHluYW1pY0RlcGVuZGVuY2llc1tfaSAtIDFdID0gYXJndW1lbnRzW19pXTtcclxuICAgICAgICB9XHJcbiAgICAgICAgdGhpcy5rZXkgPSBrZXk7XHJcbiAgICAgICAgdGhpcy5hc0tleSA9IGtleTtcclxuICAgICAgICB0aGlzLmR5bmFtaWNEZXBlbmRlbmNpZXMgPSBkeW5hbWljRGVwZW5kZW5jaWVzO1xyXG4gICAgfVxyXG4gICAgTmV3SW5zdGFuY2VfMSA9IE5ld0luc3RhbmNlO1xyXG4gICAgTmV3SW5zdGFuY2UucHJvdG90eXBlLmdldCA9IGZ1bmN0aW9uIChjb250YWluZXIpIHtcclxuICAgICAgICB2YXIgZHluYW1pY0RlcGVuZGVuY2llcyA9IHRoaXMuZHluYW1pY0RlcGVuZGVuY2llcy5sZW5ndGggPiAwXHJcbiAgICAgICAgICAgID8gdGhpcy5keW5hbWljRGVwZW5kZW5jaWVzLm1hcChmdW5jdGlvbiAoZGVwZW5kZW5jeSkge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIGRlcGVuZGVuY3lbJ3Byb3RvY29sOmF1cmVsaWE6cmVzb2x2ZXInXVxyXG4gICAgICAgICAgICAgICAgICAgID8gZGVwZW5kZW5jeS5nZXQoY29udGFpbmVyKVxyXG4gICAgICAgICAgICAgICAgICAgIDogY29udGFpbmVyLmdldChkZXBlbmRlbmN5KTtcclxuICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgOiB1bmRlZmluZWQ7XHJcbiAgICAgICAgdmFyIGZuID0gdGhpcy5rZXk7XHJcbiAgICAgICAgdmFyIHJlc29sdmVyID0gY29udGFpbmVyLmdldFJlc29sdmVyKGZuKTtcclxuICAgICAgICBpZiAocmVzb2x2ZXIgJiYgcmVzb2x2ZXIuc3RyYXRlZ3kgPT09IDMpIHtcclxuICAgICAgICAgICAgZm4gPSByZXNvbHZlci5zdGF0ZTtcclxuICAgICAgICB9XHJcbiAgICAgICAgdmFyIGluc3RhbmNlID0gY29udGFpbmVyLmludm9rZShmbiwgZHluYW1pY0RlcGVuZGVuY2llcyk7XHJcbiAgICAgICAgY29udGFpbmVyLnJlZ2lzdGVySW5zdGFuY2UodGhpcy5hc0tleSwgaW5zdGFuY2UpO1xyXG4gICAgICAgIHJldHVybiBpbnN0YW5jZTtcclxuICAgIH07XHJcbiAgICBOZXdJbnN0YW5jZS5wcm90b3R5cGUuYXMgPSBmdW5jdGlvbiAoa2V5KSB7XHJcbiAgICAgICAgdGhpcy5hc0tleSA9IGtleTtcclxuICAgICAgICByZXR1cm4gdGhpcztcclxuICAgIH07XHJcbiAgICBOZXdJbnN0YW5jZS5vZiA9IGZ1bmN0aW9uIChrZXkpIHtcclxuICAgICAgICB2YXIgZHluYW1pY0RlcGVuZGVuY2llcyA9IFtdO1xyXG4gICAgICAgIGZvciAodmFyIF9pID0gMTsgX2kgPCBhcmd1bWVudHMubGVuZ3RoOyBfaSsrKSB7XHJcbiAgICAgICAgICAgIGR5bmFtaWNEZXBlbmRlbmNpZXNbX2kgLSAxXSA9IGFyZ3VtZW50c1tfaV07XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiBuZXcgKE5ld0luc3RhbmNlXzEuYmluZC5hcHBseShOZXdJbnN0YW5jZV8xLCBbdm9pZCAwLCBrZXldLmNvbmNhdChkeW5hbWljRGVwZW5kZW5jaWVzKSkpKCk7XHJcbiAgICB9O1xyXG4gICAgdmFyIE5ld0luc3RhbmNlXzE7XHJcbiAgICBOZXdJbnN0YW5jZSA9IE5ld0luc3RhbmNlXzEgPSBfX2RlY29yYXRlKFtcclxuICAgICAgICByZXNvbHZlcigpLFxyXG4gICAgICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246cGFyYW10eXBlc1wiLCBbT2JqZWN0LCBPYmplY3RdKVxyXG4gICAgXSwgTmV3SW5zdGFuY2UpO1xyXG4gICAgcmV0dXJuIE5ld0luc3RhbmNlO1xyXG59KCkpO1xyXG5mdW5jdGlvbiBnZXREZWNvcmF0b3JEZXBlbmRlbmNpZXModGFyZ2V0KSB7XHJcbiAgICBhdXRvaW5qZWN0KHRhcmdldCk7XHJcbiAgICByZXR1cm4gdGFyZ2V0LmluamVjdDtcclxufVxyXG5mdW5jdGlvbiBsYXp5KGtleVZhbHVlKSB7XHJcbiAgICByZXR1cm4gZnVuY3Rpb24gKHRhcmdldCwgX2tleSwgaW5kZXgpIHtcclxuICAgICAgICB2YXIgaW5qZWN0JCQxID0gZ2V0RGVjb3JhdG9yRGVwZW5kZW5jaWVzKHRhcmdldCk7XHJcbiAgICAgICAgaW5qZWN0JCQxW2luZGV4XSA9IExhenkub2Yoa2V5VmFsdWUpO1xyXG4gICAgfTtcclxufVxyXG5mdW5jdGlvbiBhbGwoa2V5VmFsdWUpIHtcclxuICAgIHJldHVybiBmdW5jdGlvbiAodGFyZ2V0LCBfa2V5LCBpbmRleCkge1xyXG4gICAgICAgIHZhciBpbmplY3QkJDEgPSBnZXREZWNvcmF0b3JEZXBlbmRlbmNpZXModGFyZ2V0KTtcclxuICAgICAgICBpbmplY3QkJDFbaW5kZXhdID0gQWxsLm9mKGtleVZhbHVlKTtcclxuICAgIH07XHJcbn1cclxuZnVuY3Rpb24gb3B0aW9uYWwoY2hlY2tQYXJlbnRPclRhcmdldCkge1xyXG4gICAgaWYgKGNoZWNrUGFyZW50T3JUYXJnZXQgPT09IHZvaWQgMCkgeyBjaGVja1BhcmVudE9yVGFyZ2V0ID0gdHJ1ZTsgfVxyXG4gICAgdmFyIGRlY28gPSBmdW5jdGlvbiAoY2hlY2tQYXJlbnQpIHtcclxuICAgICAgICByZXR1cm4gZnVuY3Rpb24gKHRhcmdldCwgX2tleSwgaW5kZXgpIHtcclxuICAgICAgICAgICAgdmFyIGluamVjdCQkMSA9IGdldERlY29yYXRvckRlcGVuZGVuY2llcyh0YXJnZXQpO1xyXG4gICAgICAgICAgICBpbmplY3QkJDFbaW5kZXhdID0gT3B0aW9uYWwub2YoaW5qZWN0JCQxW2luZGV4XSwgY2hlY2tQYXJlbnQpO1xyXG4gICAgICAgIH07XHJcbiAgICB9O1xyXG4gICAgaWYgKHR5cGVvZiBjaGVja1BhcmVudE9yVGFyZ2V0ID09PSAnYm9vbGVhbicpIHtcclxuICAgICAgICByZXR1cm4gZGVjbyhjaGVja1BhcmVudE9yVGFyZ2V0KTtcclxuICAgIH1cclxuICAgIHJldHVybiBkZWNvKHRydWUpO1xyXG59XHJcbmZ1bmN0aW9uIHBhcmVudCh0YXJnZXQsIF9rZXksIGluZGV4KSB7XHJcbiAgICB2YXIgaW5qZWN0JCQxID0gZ2V0RGVjb3JhdG9yRGVwZW5kZW5jaWVzKHRhcmdldCk7XHJcbiAgICBpbmplY3QkJDFbaW5kZXhdID0gUGFyZW50Lm9mKGluamVjdCQkMVtpbmRleF0pO1xyXG59XHJcbmZ1bmN0aW9uIGZhY3Rvcnkoa2V5VmFsdWUpIHtcclxuICAgIHJldHVybiBmdW5jdGlvbiAodGFyZ2V0LCBfa2V5LCBpbmRleCkge1xyXG4gICAgICAgIHZhciBpbmplY3QkJDEgPSBnZXREZWNvcmF0b3JEZXBlbmRlbmNpZXModGFyZ2V0KTtcclxuICAgICAgICBpbmplY3QkJDFbaW5kZXhdID0gRmFjdG9yeS5vZihrZXlWYWx1ZSk7XHJcbiAgICB9O1xyXG59XHJcbmZ1bmN0aW9uIG5ld0luc3RhbmNlKGFzS2V5T3JUYXJnZXQpIHtcclxuICAgIHZhciBkeW5hbWljRGVwZW5kZW5jaWVzID0gW107XHJcbiAgICBmb3IgKHZhciBfaSA9IDE7IF9pIDwgYXJndW1lbnRzLmxlbmd0aDsgX2krKykge1xyXG4gICAgICAgIGR5bmFtaWNEZXBlbmRlbmNpZXNbX2kgLSAxXSA9IGFyZ3VtZW50c1tfaV07XHJcbiAgICB9XHJcbiAgICB2YXIgZGVjbyA9IGZ1bmN0aW9uIChhc0tleSkge1xyXG4gICAgICAgIHJldHVybiBmdW5jdGlvbiAodGFyZ2V0LCBfa2V5LCBpbmRleCkge1xyXG4gICAgICAgICAgICB2YXIgaW5qZWN0JCQxID0gZ2V0RGVjb3JhdG9yRGVwZW5kZW5jaWVzKHRhcmdldCk7XHJcbiAgICAgICAgICAgIGluamVjdCQkMVtpbmRleF0gPSBOZXdJbnN0YW5jZS5vZi5hcHBseShOZXdJbnN0YW5jZSwgW2luamVjdCQkMVtpbmRleF1dLmNvbmNhdChkeW5hbWljRGVwZW5kZW5jaWVzKSk7XHJcbiAgICAgICAgICAgIGlmICghIWFzS2V5KSB7XHJcbiAgICAgICAgICAgICAgICBpbmplY3QkJDFbaW5kZXhdLmFzKGFzS2V5KTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH07XHJcbiAgICB9O1xyXG4gICAgaWYgKGFyZ3VtZW50cy5sZW5ndGggPj0gMSkge1xyXG4gICAgICAgIHJldHVybiBkZWNvKGFzS2V5T3JUYXJnZXQpO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIGRlY28oKTtcclxufVxuXG5mdW5jdGlvbiB2YWxpZGF0ZUtleShrZXkpIHtcclxuICAgIGlmIChrZXkgPT09IG51bGwgfHwga2V5ID09PSB1bmRlZmluZWQpIHtcclxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ2tleS92YWx1ZSBjYW5ub3QgYmUgbnVsbCBvciB1bmRlZmluZWQuIEFyZSB5b3UgdHJ5aW5nIHRvIGluamVjdC9yZWdpc3RlciBzb21ldGhpbmcgdGhhdCBkb2VzblxcJ3QgZXhpc3Qgd2l0aCBEST8nKTtcclxuICAgIH1cclxufVxyXG52YXIgX2VtcHR5UGFyYW1ldGVycyA9IE9iamVjdC5mcmVlemUoW10pO1xyXG5tZXRhZGF0YS5yZWdpc3RyYXRpb24gPSAnYXVyZWxpYTpyZWdpc3RyYXRpb24nO1xyXG5tZXRhZGF0YS5pbnZva2VyID0gJ2F1cmVsaWE6aW52b2tlcic7XHJcbnZhciByZXNvbHZlckRlY29yYXRlcyA9IHJlc29sdmVyLmRlY29yYXRlcztcclxudmFyIEludm9jYXRpb25IYW5kbGVyID0gKGZ1bmN0aW9uICgpIHtcclxuICAgIGZ1bmN0aW9uIEludm9jYXRpb25IYW5kbGVyKGZuLCBpbnZva2VyLCBkZXBlbmRlbmNpZXMpIHtcclxuICAgICAgICB0aGlzLmZuID0gZm47XHJcbiAgICAgICAgdGhpcy5pbnZva2VyID0gaW52b2tlcjtcclxuICAgICAgICB0aGlzLmRlcGVuZGVuY2llcyA9IGRlcGVuZGVuY2llcztcclxuICAgIH1cclxuICAgIEludm9jYXRpb25IYW5kbGVyLnByb3RvdHlwZS5pbnZva2UgPSBmdW5jdGlvbiAoY29udGFpbmVyLCBkeW5hbWljRGVwZW5kZW5jaWVzKSB7XHJcbiAgICAgICAgcmV0dXJuIGR5bmFtaWNEZXBlbmRlbmNpZXMgIT09IHVuZGVmaW5lZFxyXG4gICAgICAgICAgICA/IHRoaXMuaW52b2tlci5pbnZva2VXaXRoRHluYW1pY0RlcGVuZGVuY2llcyhjb250YWluZXIsIHRoaXMuZm4sIHRoaXMuZGVwZW5kZW5jaWVzLCBkeW5hbWljRGVwZW5kZW5jaWVzKVxyXG4gICAgICAgICAgICA6IHRoaXMuaW52b2tlci5pbnZva2UoY29udGFpbmVyLCB0aGlzLmZuLCB0aGlzLmRlcGVuZGVuY2llcyk7XHJcbiAgICB9O1xyXG4gICAgcmV0dXJuIEludm9jYXRpb25IYW5kbGVyO1xyXG59KCkpO1xyXG5mdW5jdGlvbiBpbnZva2VXaXRoRHluYW1pY0RlcGVuZGVuY2llcyhjb250YWluZXIsIGZuLCBzdGF0aWNEZXBlbmRlbmNpZXMsIGR5bmFtaWNEZXBlbmRlbmNpZXMpIHtcclxuICAgIHZhciBpID0gc3RhdGljRGVwZW5kZW5jaWVzLmxlbmd0aDtcclxuICAgIHZhciBhcmdzID0gbmV3IEFycmF5KGkpO1xyXG4gICAgdmFyIGxvb2t1cDtcclxuICAgIHdoaWxlIChpLS0pIHtcclxuICAgICAgICBsb29rdXAgPSBzdGF0aWNEZXBlbmRlbmNpZXNbaV07XHJcbiAgICAgICAgaWYgKGxvb2t1cCA9PT0gbnVsbCB8fCBsb29rdXAgPT09IHVuZGVmaW5lZCkge1xyXG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0NvbnN0cnVjdG9yIFBhcmFtZXRlciB3aXRoIGluZGV4ICcgK1xyXG4gICAgICAgICAgICAgICAgaSArXHJcbiAgICAgICAgICAgICAgICAnIGNhbm5vdCBiZSBudWxsIG9yIHVuZGVmaW5lZC4gQXJlIHlvdSB0cnlpbmcgdG8gaW5qZWN0L3JlZ2lzdGVyIHNvbWV0aGluZyB0aGF0IGRvZXNuXFwndCBleGlzdCB3aXRoIERJPycpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgYXJnc1tpXSA9IGNvbnRhaW5lci5nZXQobG9va3VwKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBpZiAoZHluYW1pY0RlcGVuZGVuY2llcyAhPT0gdW5kZWZpbmVkKSB7XHJcbiAgICAgICAgYXJncyA9IGFyZ3MuY29uY2F0KGR5bmFtaWNEZXBlbmRlbmNpZXMpO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIFJlZmxlY3QuY29uc3RydWN0KGZuLCBhcmdzKTtcclxufVxyXG52YXIgY2xhc3NJbnZva2VyID0ge1xyXG4gICAgaW52b2tlOiBmdW5jdGlvbiAoY29udGFpbmVyLCBUeXBlLCBkZXBzKSB7XHJcbiAgICAgICAgdmFyIGluc3RhbmNlcyA9IGRlcHMubWFwKGZ1bmN0aW9uIChkZXApIHsgcmV0dXJuIGNvbnRhaW5lci5nZXQoZGVwKTsgfSk7XHJcbiAgICAgICAgcmV0dXJuIFJlZmxlY3QuY29uc3RydWN0KFR5cGUsIGluc3RhbmNlcyk7XHJcbiAgICB9LFxyXG4gICAgaW52b2tlV2l0aER5bmFtaWNEZXBlbmRlbmNpZXM6IGludm9rZVdpdGhEeW5hbWljRGVwZW5kZW5jaWVzXHJcbn07XHJcbmZ1bmN0aW9uIGdldERlcGVuZGVuY2llcyhmKSB7XHJcbiAgICBpZiAoIWYuaGFzT3duUHJvcGVydHkoJ2luamVjdCcpKSB7XHJcbiAgICAgICAgcmV0dXJuIFtdO1xyXG4gICAgfVxyXG4gICAgaWYgKHR5cGVvZiBmLmluamVjdCA9PT0gJ2Z1bmN0aW9uJykge1xyXG4gICAgICAgIHJldHVybiBmLmluamVjdCgpO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIGYuaW5qZWN0O1xyXG59XHJcbnZhciBDb250YWluZXIgPSAoZnVuY3Rpb24gKCkge1xyXG4gICAgZnVuY3Rpb24gQ29udGFpbmVyKGNvbmZpZ3VyYXRpb24pIHtcclxuICAgICAgICBpZiAoY29uZmlndXJhdGlvbiA9PT0gdW5kZWZpbmVkKSB7XHJcbiAgICAgICAgICAgIGNvbmZpZ3VyYXRpb24gPSB7fTtcclxuICAgICAgICB9XHJcbiAgICAgICAgdGhpcy5fY29uZmlndXJhdGlvbiA9IGNvbmZpZ3VyYXRpb247XHJcbiAgICAgICAgdGhpcy5fb25IYW5kbGVyQ3JlYXRlZCA9IGNvbmZpZ3VyYXRpb24ub25IYW5kbGVyQ3JlYXRlZDtcclxuICAgICAgICB0aGlzLl9oYW5kbGVycyA9XHJcbiAgICAgICAgICAgIGNvbmZpZ3VyYXRpb24uaGFuZGxlcnMgfHwgKGNvbmZpZ3VyYXRpb24uaGFuZGxlcnMgPSBuZXcgTWFwKCkpO1xyXG4gICAgICAgIHRoaXMuX3Jlc29sdmVycyA9IG5ldyBNYXAoKTtcclxuICAgICAgICB0aGlzLnJvb3QgPSB0aGlzO1xyXG4gICAgICAgIHRoaXMucGFyZW50ID0gbnVsbDtcclxuICAgIH1cclxuICAgIENvbnRhaW5lci5wcm90b3R5cGUubWFrZUdsb2JhbCA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICBDb250YWluZXIuaW5zdGFuY2UgPSB0aGlzO1xyXG4gICAgICAgIHJldHVybiB0aGlzO1xyXG4gICAgfTtcclxuICAgIENvbnRhaW5lci5wcm90b3R5cGUuc2V0SGFuZGxlckNyZWF0ZWRDYWxsYmFjayA9IGZ1bmN0aW9uIChvbkhhbmRsZXJDcmVhdGVkKSB7XHJcbiAgICAgICAgdGhpcy5fb25IYW5kbGVyQ3JlYXRlZCA9IG9uSGFuZGxlckNyZWF0ZWQ7XHJcbiAgICAgICAgdGhpcy5fY29uZmlndXJhdGlvbi5vbkhhbmRsZXJDcmVhdGVkID0gb25IYW5kbGVyQ3JlYXRlZDtcclxuICAgIH07XHJcbiAgICBDb250YWluZXIucHJvdG90eXBlLnJlZ2lzdGVySW5zdGFuY2UgPSBmdW5jdGlvbiAoa2V5LCBpbnN0YW5jZSkge1xyXG4gICAgICAgIHJldHVybiB0aGlzLnJlZ2lzdGVyUmVzb2x2ZXIoa2V5LCBuZXcgU3RyYXRlZ3lSZXNvbHZlcigwLCBpbnN0YW5jZSA9PT0gdW5kZWZpbmVkID8ga2V5IDogaW5zdGFuY2UpKTtcclxuICAgIH07XHJcbiAgICBDb250YWluZXIucHJvdG90eXBlLnJlZ2lzdGVyU2luZ2xldG9uID0gZnVuY3Rpb24gKGtleSwgZm4pIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5yZWdpc3RlclJlc29sdmVyKGtleSwgbmV3IFN0cmF0ZWd5UmVzb2x2ZXIoMSwgZm4gPT09IHVuZGVmaW5lZCA/IGtleSA6IGZuKSk7XHJcbiAgICB9O1xyXG4gICAgQ29udGFpbmVyLnByb3RvdHlwZS5yZWdpc3RlclRyYW5zaWVudCA9IGZ1bmN0aW9uIChrZXksIGZuKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMucmVnaXN0ZXJSZXNvbHZlcihrZXksIG5ldyBTdHJhdGVneVJlc29sdmVyKDIsIGZuID09PSB1bmRlZmluZWQgPyBrZXkgOiBmbikpO1xyXG4gICAgfTtcclxuICAgIENvbnRhaW5lci5wcm90b3R5cGUucmVnaXN0ZXJIYW5kbGVyID0gZnVuY3Rpb24gKGtleSwgaGFuZGxlcikge1xyXG4gICAgICAgIHJldHVybiB0aGlzLnJlZ2lzdGVyUmVzb2x2ZXIoa2V5LCBuZXcgU3RyYXRlZ3lSZXNvbHZlcigzLCBoYW5kbGVyKSk7XHJcbiAgICB9O1xyXG4gICAgQ29udGFpbmVyLnByb3RvdHlwZS5yZWdpc3RlckFsaWFzID0gZnVuY3Rpb24gKG9yaWdpbmFsS2V5LCBhbGlhc0tleSkge1xyXG4gICAgICAgIHJldHVybiB0aGlzLnJlZ2lzdGVyUmVzb2x2ZXIoYWxpYXNLZXksIG5ldyBTdHJhdGVneVJlc29sdmVyKDUsIG9yaWdpbmFsS2V5KSk7XHJcbiAgICB9O1xyXG4gICAgQ29udGFpbmVyLnByb3RvdHlwZS5yZWdpc3RlclJlc29sdmVyID0gZnVuY3Rpb24gKGtleSwgcmVzb2x2ZXIkJDEpIHtcclxuICAgICAgICB2YWxpZGF0ZUtleShrZXkpO1xyXG4gICAgICAgIHZhciBhbGxSZXNvbHZlcnMgPSB0aGlzLl9yZXNvbHZlcnM7XHJcbiAgICAgICAgdmFyIHJlc3VsdCA9IGFsbFJlc29sdmVycy5nZXQoa2V5KTtcclxuICAgICAgICBpZiAocmVzdWx0ID09PSB1bmRlZmluZWQpIHtcclxuICAgICAgICAgICAgYWxsUmVzb2x2ZXJzLnNldChrZXksIHJlc29sdmVyJCQxKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSBpZiAocmVzdWx0LnN0cmF0ZWd5ID09PSA0KSB7XHJcbiAgICAgICAgICAgIHJlc3VsdC5zdGF0ZS5wdXNoKHJlc29sdmVyJCQxKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgIGFsbFJlc29sdmVycy5zZXQoa2V5LCBuZXcgU3RyYXRlZ3lSZXNvbHZlcig0LCBbcmVzdWx0LCByZXNvbHZlciQkMV0pKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIHJlc29sdmVyJCQxO1xyXG4gICAgfTtcclxuICAgIENvbnRhaW5lci5wcm90b3R5cGUuYXV0b1JlZ2lzdGVyID0gZnVuY3Rpb24gKGtleSwgZm4pIHtcclxuICAgICAgICBmbiA9IGZuID09PSB1bmRlZmluZWQgPyBrZXkgOiBmbjtcclxuICAgICAgICBpZiAodHlwZW9mIGZuID09PSAnZnVuY3Rpb24nKSB7XHJcbiAgICAgICAgICAgIHZhciByZWdpc3RyYXRpb24gPSBtZXRhZGF0YS5nZXQobWV0YWRhdGEucmVnaXN0cmF0aW9uLCBmbik7XHJcbiAgICAgICAgICAgIGlmIChyZWdpc3RyYXRpb24gPT09IHVuZGVmaW5lZCkge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMucmVnaXN0ZXJSZXNvbHZlcihrZXksIG5ldyBTdHJhdGVneVJlc29sdmVyKDEsIGZuKSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgcmV0dXJuIHJlZ2lzdHJhdGlvbi5yZWdpc3RlclJlc29sdmVyKHRoaXMsIGtleSwgZm4pO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gdGhpcy5yZWdpc3RlclJlc29sdmVyKGtleSwgbmV3IFN0cmF0ZWd5UmVzb2x2ZXIoMCwgZm4pKTtcclxuICAgIH07XHJcbiAgICBDb250YWluZXIucHJvdG90eXBlLmF1dG9SZWdpc3RlckFsbCA9IGZ1bmN0aW9uIChmbnMpIHtcclxuICAgICAgICB2YXIgaSA9IGZucy5sZW5ndGg7XHJcbiAgICAgICAgd2hpbGUgKGktLSkge1xyXG4gICAgICAgICAgICB0aGlzLmF1dG9SZWdpc3RlcihmbnNbaV0pO1xyXG4gICAgICAgIH1cclxuICAgIH07XHJcbiAgICBDb250YWluZXIucHJvdG90eXBlLnVucmVnaXN0ZXIgPSBmdW5jdGlvbiAoa2V5KSB7XHJcbiAgICAgICAgdGhpcy5fcmVzb2x2ZXJzLmRlbGV0ZShrZXkpO1xyXG4gICAgfTtcclxuICAgIENvbnRhaW5lci5wcm90b3R5cGUuaGFzUmVzb2x2ZXIgPSBmdW5jdGlvbiAoa2V5LCBjaGVja1BhcmVudCkge1xyXG4gICAgICAgIGlmIChjaGVja1BhcmVudCA9PT0gdm9pZCAwKSB7IGNoZWNrUGFyZW50ID0gZmFsc2U7IH1cclxuICAgICAgICB2YWxpZGF0ZUtleShrZXkpO1xyXG4gICAgICAgIHJldHVybiAodGhpcy5fcmVzb2x2ZXJzLmhhcyhrZXkpIHx8XHJcbiAgICAgICAgICAgIChjaGVja1BhcmVudCAmJlxyXG4gICAgICAgICAgICAgICAgdGhpcy5wYXJlbnQgIT09IG51bGwgJiZcclxuICAgICAgICAgICAgICAgIHRoaXMucGFyZW50Lmhhc1Jlc29sdmVyKGtleSwgY2hlY2tQYXJlbnQpKSk7XHJcbiAgICB9O1xyXG4gICAgQ29udGFpbmVyLnByb3RvdHlwZS5nZXRSZXNvbHZlciA9IGZ1bmN0aW9uIChrZXkpIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5fcmVzb2x2ZXJzLmdldChrZXkpO1xyXG4gICAgfTtcclxuICAgIENvbnRhaW5lci5wcm90b3R5cGUuZ2V0ID0gZnVuY3Rpb24gKGtleSkge1xyXG4gICAgICAgIHZhbGlkYXRlS2V5KGtleSk7XHJcbiAgICAgICAgaWYgKGtleSA9PT0gQ29udGFpbmVyKSB7XHJcbiAgICAgICAgICAgIHJldHVybiB0aGlzO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAocmVzb2x2ZXJEZWNvcmF0ZXMoa2V5KSkge1xyXG4gICAgICAgICAgICByZXR1cm4ga2V5LmdldCh0aGlzLCBrZXkpO1xyXG4gICAgICAgIH1cclxuICAgICAgICB2YXIgcmVzb2x2ZXIkJDEgPSB0aGlzLl9yZXNvbHZlcnMuZ2V0KGtleSk7XHJcbiAgICAgICAgaWYgKHJlc29sdmVyJCQxID09PSB1bmRlZmluZWQpIHtcclxuICAgICAgICAgICAgaWYgKHRoaXMucGFyZW50ID09PSBudWxsKSB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5hdXRvUmVnaXN0ZXIoa2V5KS5nZXQodGhpcywga2V5KTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB2YXIgcmVnaXN0cmF0aW9uID0gbWV0YWRhdGEuZ2V0KG1ldGFkYXRhLnJlZ2lzdHJhdGlvbiwga2V5KTtcclxuICAgICAgICAgICAgaWYgKHJlZ2lzdHJhdGlvbiA9PT0gdW5kZWZpbmVkKSB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5wYXJlbnQuX2dldChrZXkpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHJldHVybiByZWdpc3RyYXRpb24ucmVnaXN0ZXJSZXNvbHZlcih0aGlzLCBrZXksIGtleSkuZ2V0KHRoaXMsIGtleSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiByZXNvbHZlciQkMS5nZXQodGhpcywga2V5KTtcclxuICAgIH07XHJcbiAgICBDb250YWluZXIucHJvdG90eXBlLl9nZXQgPSBmdW5jdGlvbiAoa2V5KSB7XHJcbiAgICAgICAgdmFyIHJlc29sdmVyJCQxID0gdGhpcy5fcmVzb2x2ZXJzLmdldChrZXkpO1xyXG4gICAgICAgIGlmIChyZXNvbHZlciQkMSA9PT0gdW5kZWZpbmVkKSB7XHJcbiAgICAgICAgICAgIGlmICh0aGlzLnBhcmVudCA9PT0gbnVsbCkge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuYXV0b1JlZ2lzdGVyKGtleSkuZ2V0KHRoaXMsIGtleSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgcmV0dXJuIHRoaXMucGFyZW50Ll9nZXQoa2V5KTtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIHJlc29sdmVyJCQxLmdldCh0aGlzLCBrZXkpO1xyXG4gICAgfTtcclxuICAgIENvbnRhaW5lci5wcm90b3R5cGUuZ2V0QWxsID0gZnVuY3Rpb24gKGtleSkge1xyXG4gICAgICAgIHZhbGlkYXRlS2V5KGtleSk7XHJcbiAgICAgICAgdmFyIHJlc29sdmVyJCQxID0gdGhpcy5fcmVzb2x2ZXJzLmdldChrZXkpO1xyXG4gICAgICAgIGlmIChyZXNvbHZlciQkMSA9PT0gdW5kZWZpbmVkKSB7XHJcbiAgICAgICAgICAgIGlmICh0aGlzLnBhcmVudCA9PT0gbnVsbCkge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIF9lbXB0eVBhcmFtZXRlcnM7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgcmV0dXJuIHRoaXMucGFyZW50LmdldEFsbChrZXkpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAocmVzb2x2ZXIkJDEuc3RyYXRlZ3kgPT09IDQpIHtcclxuICAgICAgICAgICAgdmFyIHN0YXRlID0gcmVzb2x2ZXIkJDEuc3RhdGU7XHJcbiAgICAgICAgICAgIHZhciBpID0gc3RhdGUubGVuZ3RoO1xyXG4gICAgICAgICAgICB2YXIgcmVzdWx0cyA9IG5ldyBBcnJheShpKTtcclxuICAgICAgICAgICAgd2hpbGUgKGktLSkge1xyXG4gICAgICAgICAgICAgICAgcmVzdWx0c1tpXSA9IHN0YXRlW2ldLmdldCh0aGlzLCBrZXkpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHJldHVybiByZXN1bHRzO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gW3Jlc29sdmVyJCQxLmdldCh0aGlzLCBrZXkpXTtcclxuICAgIH07XHJcbiAgICBDb250YWluZXIucHJvdG90eXBlLmNyZWF0ZUNoaWxkID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHZhciBjaGlsZCA9IG5ldyBDb250YWluZXIodGhpcy5fY29uZmlndXJhdGlvbik7XHJcbiAgICAgICAgY2hpbGQucm9vdCA9IHRoaXMucm9vdDtcclxuICAgICAgICBjaGlsZC5wYXJlbnQgPSB0aGlzO1xyXG4gICAgICAgIHJldHVybiBjaGlsZDtcclxuICAgIH07XHJcbiAgICBDb250YWluZXIucHJvdG90eXBlLmludm9rZSA9IGZ1bmN0aW9uIChmbiwgZHluYW1pY0RlcGVuZGVuY2llcykge1xyXG4gICAgICAgIHRyeSB7XHJcbiAgICAgICAgICAgIHZhciBoYW5kbGVyID0gdGhpcy5faGFuZGxlcnMuZ2V0KGZuKTtcclxuICAgICAgICAgICAgaWYgKGhhbmRsZXIgPT09IHVuZGVmaW5lZCkge1xyXG4gICAgICAgICAgICAgICAgaGFuZGxlciA9IHRoaXMuX2NyZWF0ZUludm9jYXRpb25IYW5kbGVyKGZuKTtcclxuICAgICAgICAgICAgICAgIHRoaXMuX2hhbmRsZXJzLnNldChmbiwgaGFuZGxlcik7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgcmV0dXJuIGhhbmRsZXIuaW52b2tlKHRoaXMsIGR5bmFtaWNEZXBlbmRlbmNpZXMpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBjYXRjaCAoZSkge1xyXG4gICAgICAgICAgICB0aHJvdyBuZXcgQWdncmVnYXRlRXJyb3IoXCJFcnJvciBpbnZva2luZyBcIiArIGZuLm5hbWUgKyBcIi4gQ2hlY2sgdGhlIGlubmVyIGVycm9yIGZvciBkZXRhaWxzLlwiLCBlLCB0cnVlKTtcclxuICAgICAgICB9XHJcbiAgICB9O1xyXG4gICAgQ29udGFpbmVyLnByb3RvdHlwZS5fY3JlYXRlSW52b2NhdGlvbkhhbmRsZXIgPSBmdW5jdGlvbiAoZm4pIHtcclxuICAgICAgICB2YXIgZGVwZW5kZW5jaWVzO1xyXG4gICAgICAgIGlmIChmbi5pbmplY3QgPT09IHVuZGVmaW5lZCkge1xyXG4gICAgICAgICAgICBkZXBlbmRlbmNpZXMgPVxyXG4gICAgICAgICAgICAgICAgbWV0YWRhdGEuZ2V0T3duKG1ldGFkYXRhLnBhcmFtVHlwZXMsIGZuKSB8fCBfZW1wdHlQYXJhbWV0ZXJzO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgZGVwZW5kZW5jaWVzID0gW107XHJcbiAgICAgICAgICAgIHZhciBjdG9yID0gZm47XHJcbiAgICAgICAgICAgIHdoaWxlICh0eXBlb2YgY3RvciA9PT0gJ2Z1bmN0aW9uJykge1xyXG4gICAgICAgICAgICAgICAgZGVwZW5kZW5jaWVzLnB1c2guYXBwbHkoZGVwZW5kZW5jaWVzLCBnZXREZXBlbmRlbmNpZXMoY3RvcikpO1xyXG4gICAgICAgICAgICAgICAgY3RvciA9IE9iamVjdC5nZXRQcm90b3R5cGVPZihjdG9yKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICB2YXIgaW52b2tlciA9IG1ldGFkYXRhLmdldE93bihtZXRhZGF0YS5pbnZva2VyLCBmbikgfHwgY2xhc3NJbnZva2VyO1xyXG4gICAgICAgIHZhciBoYW5kbGVyID0gbmV3IEludm9jYXRpb25IYW5kbGVyKGZuLCBpbnZva2VyLCBkZXBlbmRlbmNpZXMpO1xyXG4gICAgICAgIHJldHVybiB0aGlzLl9vbkhhbmRsZXJDcmVhdGVkICE9PSB1bmRlZmluZWRcclxuICAgICAgICAgICAgPyB0aGlzLl9vbkhhbmRsZXJDcmVhdGVkKGhhbmRsZXIpXHJcbiAgICAgICAgICAgIDogaGFuZGxlcjtcclxuICAgIH07XHJcbiAgICByZXR1cm4gQ29udGFpbmVyO1xyXG59KCkpO1xuXG5mdW5jdGlvbiBpbnZva2VyKHZhbHVlKSB7XHJcbiAgICByZXR1cm4gZnVuY3Rpb24gKHRhcmdldCkge1xyXG4gICAgICAgIG1ldGFkYXRhLmRlZmluZShtZXRhZGF0YS5pbnZva2VyLCB2YWx1ZSwgdGFyZ2V0KTtcclxuICAgIH07XHJcbn1cclxuZnVuY3Rpb24gaW52b2tlQXNGYWN0b3J5KHBvdGVudGlhbFRhcmdldCkge1xyXG4gICAgdmFyIGRlY28gPSBmdW5jdGlvbiAodGFyZ2V0KSB7XHJcbiAgICAgICAgbWV0YWRhdGEuZGVmaW5lKG1ldGFkYXRhLmludm9rZXIsIEZhY3RvcnlJbnZva2VyLmluc3RhbmNlLCB0YXJnZXQpO1xyXG4gICAgfTtcclxuICAgIHJldHVybiBwb3RlbnRpYWxUYXJnZXQgPyBkZWNvKHBvdGVudGlhbFRhcmdldCkgOiBkZWNvO1xyXG59XHJcbnZhciBGYWN0b3J5SW52b2tlciA9IChmdW5jdGlvbiAoKSB7XHJcbiAgICBmdW5jdGlvbiBGYWN0b3J5SW52b2tlcigpIHtcclxuICAgIH1cclxuICAgIEZhY3RvcnlJbnZva2VyLnByb3RvdHlwZS5pbnZva2UgPSBmdW5jdGlvbiAoY29udGFpbmVyLCBmbiwgZGVwZW5kZW5jaWVzKSB7XHJcbiAgICAgICAgdmFyIGkgPSBkZXBlbmRlbmNpZXMubGVuZ3RoO1xyXG4gICAgICAgIHZhciBhcmdzID0gbmV3IEFycmF5KGkpO1xyXG4gICAgICAgIHdoaWxlIChpLS0pIHtcclxuICAgICAgICAgICAgYXJnc1tpXSA9IGNvbnRhaW5lci5nZXQoZGVwZW5kZW5jaWVzW2ldKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIGZuLmFwcGx5KHVuZGVmaW5lZCwgYXJncyk7XHJcbiAgICB9O1xyXG4gICAgRmFjdG9yeUludm9rZXIucHJvdG90eXBlLmludm9rZVdpdGhEeW5hbWljRGVwZW5kZW5jaWVzID0gZnVuY3Rpb24gKGNvbnRhaW5lciwgZm4sIHN0YXRpY0RlcGVuZGVuY2llcywgZHluYW1pY0RlcGVuZGVuY2llcykge1xyXG4gICAgICAgIHZhciBpID0gc3RhdGljRGVwZW5kZW5jaWVzLmxlbmd0aDtcclxuICAgICAgICB2YXIgYXJncyA9IG5ldyBBcnJheShpKTtcclxuICAgICAgICB3aGlsZSAoaS0tKSB7XHJcbiAgICAgICAgICAgIGFyZ3NbaV0gPSBjb250YWluZXIuZ2V0KHN0YXRpY0RlcGVuZGVuY2llc1tpXSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmIChkeW5hbWljRGVwZW5kZW5jaWVzICE9PSB1bmRlZmluZWQpIHtcclxuICAgICAgICAgICAgYXJncyA9IGFyZ3MuY29uY2F0KGR5bmFtaWNEZXBlbmRlbmNpZXMpO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gZm4uYXBwbHkodW5kZWZpbmVkLCBhcmdzKTtcclxuICAgIH07XHJcbiAgICByZXR1cm4gRmFjdG9yeUludm9rZXI7XHJcbn0oKSk7XHJcbkZhY3RvcnlJbnZva2VyLmluc3RhbmNlID0gbmV3IEZhY3RvcnlJbnZva2VyKCk7XG5cbmZ1bmN0aW9uIHJlZ2lzdHJhdGlvbih2YWx1ZSkge1xyXG4gICAgcmV0dXJuIGZ1bmN0aW9uICh0YXJnZXQpIHtcclxuICAgICAgICBtZXRhZGF0YS5kZWZpbmUobWV0YWRhdGEucmVnaXN0cmF0aW9uLCB2YWx1ZSwgdGFyZ2V0KTtcclxuICAgIH07XHJcbn1cclxuZnVuY3Rpb24gdHJhbnNpZW50KGtleSkge1xyXG4gICAgcmV0dXJuIHJlZ2lzdHJhdGlvbihuZXcgVHJhbnNpZW50UmVnaXN0cmF0aW9uKGtleSkpO1xyXG59XHJcbmZ1bmN0aW9uIHNpbmdsZXRvbihrZXlPclJlZ2lzdGVySW5DaGlsZCwgcmVnaXN0ZXJJbkNoaWxkKSB7XHJcbiAgICBpZiAocmVnaXN0ZXJJbkNoaWxkID09PSB2b2lkIDApIHsgcmVnaXN0ZXJJbkNoaWxkID0gZmFsc2U7IH1cclxuICAgIHJldHVybiByZWdpc3RyYXRpb24obmV3IFNpbmdsZXRvblJlZ2lzdHJhdGlvbihrZXlPclJlZ2lzdGVySW5DaGlsZCwgcmVnaXN0ZXJJbkNoaWxkKSk7XHJcbn1cclxudmFyIFRyYW5zaWVudFJlZ2lzdHJhdGlvbiA9IChmdW5jdGlvbiAoKSB7XHJcbiAgICBmdW5jdGlvbiBUcmFuc2llbnRSZWdpc3RyYXRpb24oa2V5KSB7XHJcbiAgICAgICAgdGhpcy5fa2V5ID0ga2V5O1xyXG4gICAgfVxyXG4gICAgVHJhbnNpZW50UmVnaXN0cmF0aW9uLnByb3RvdHlwZS5yZWdpc3RlclJlc29sdmVyID0gZnVuY3Rpb24gKGNvbnRhaW5lciwga2V5LCBmbikge1xyXG4gICAgICAgIHZhciBleGlzdGluZ1Jlc29sdmVyID0gY29udGFpbmVyLmdldFJlc29sdmVyKHRoaXMuX2tleSB8fCBrZXkpO1xyXG4gICAgICAgIHJldHVybiBleGlzdGluZ1Jlc29sdmVyID09PSB1bmRlZmluZWRcclxuICAgICAgICAgICAgPyBjb250YWluZXIucmVnaXN0ZXJUcmFuc2llbnQoKHRoaXMuX2tleSB8fCBrZXkpLCBmbilcclxuICAgICAgICAgICAgOiBleGlzdGluZ1Jlc29sdmVyO1xyXG4gICAgfTtcclxuICAgIHJldHVybiBUcmFuc2llbnRSZWdpc3RyYXRpb247XHJcbn0oKSk7XHJcbnZhciBTaW5nbGV0b25SZWdpc3RyYXRpb24gPSAoZnVuY3Rpb24gKCkge1xyXG4gICAgZnVuY3Rpb24gU2luZ2xldG9uUmVnaXN0cmF0aW9uKGtleU9yUmVnaXN0ZXJJbkNoaWxkLCByZWdpc3RlckluQ2hpbGQpIHtcclxuICAgICAgICBpZiAocmVnaXN0ZXJJbkNoaWxkID09PSB2b2lkIDApIHsgcmVnaXN0ZXJJbkNoaWxkID0gZmFsc2U7IH1cclxuICAgICAgICBpZiAodHlwZW9mIGtleU9yUmVnaXN0ZXJJbkNoaWxkID09PSAnYm9vbGVhbicpIHtcclxuICAgICAgICAgICAgdGhpcy5fcmVnaXN0ZXJJbkNoaWxkID0ga2V5T3JSZWdpc3RlckluQ2hpbGQ7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICB0aGlzLl9rZXkgPSBrZXlPclJlZ2lzdGVySW5DaGlsZDtcclxuICAgICAgICAgICAgdGhpcy5fcmVnaXN0ZXJJbkNoaWxkID0gcmVnaXN0ZXJJbkNoaWxkO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIFNpbmdsZXRvblJlZ2lzdHJhdGlvbi5wcm90b3R5cGUucmVnaXN0ZXJSZXNvbHZlciA9IGZ1bmN0aW9uIChjb250YWluZXIsIGtleSwgZm4pIHtcclxuICAgICAgICB2YXIgdGFyZ2V0Q29udGFpbmVyID0gdGhpcy5fcmVnaXN0ZXJJbkNoaWxkID8gY29udGFpbmVyIDogY29udGFpbmVyLnJvb3Q7XHJcbiAgICAgICAgdmFyIGV4aXN0aW5nUmVzb2x2ZXIgPSB0YXJnZXRDb250YWluZXIuZ2V0UmVzb2x2ZXIodGhpcy5fa2V5IHx8IGtleSk7XHJcbiAgICAgICAgcmV0dXJuIGV4aXN0aW5nUmVzb2x2ZXIgPT09IHVuZGVmaW5lZFxyXG4gICAgICAgICAgICA/IHRhcmdldENvbnRhaW5lci5yZWdpc3RlclNpbmdsZXRvbih0aGlzLl9rZXkgfHwga2V5LCBmbilcclxuICAgICAgICAgICAgOiBleGlzdGluZ1Jlc29sdmVyO1xyXG4gICAgfTtcclxuICAgIHJldHVybiBTaW5nbGV0b25SZWdpc3RyYXRpb247XHJcbn0oKSk7XG5cbmV4cG9ydCB7IF9lbXB0eVBhcmFtZXRlcnMsIEludm9jYXRpb25IYW5kbGVyLCBDb250YWluZXIsIGF1dG9pbmplY3QsIGluamVjdCwgaW52b2tlciwgaW52b2tlQXNGYWN0b3J5LCBGYWN0b3J5SW52b2tlciwgcmVnaXN0cmF0aW9uLCB0cmFuc2llbnQsIHNpbmdsZXRvbiwgVHJhbnNpZW50UmVnaXN0cmF0aW9uLCBTaW5nbGV0b25SZWdpc3RyYXRpb24sIHJlc29sdmVyLCBTdHJhdGVneVJlc29sdmVyLCBMYXp5LCBBbGwsIE9wdGlvbmFsLCBQYXJlbnQsIEZhY3RvcnksIE5ld0luc3RhbmNlLCBnZXREZWNvcmF0b3JEZXBlbmRlbmNpZXMsIGxhenksIGFsbCwgb3B0aW9uYWwsIHBhcmVudCwgZmFjdG9yeSwgbmV3SW5zdGFuY2UgfTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///3U8n\n");

/***/ })

}]);